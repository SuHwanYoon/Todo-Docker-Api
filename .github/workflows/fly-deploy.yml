name: Fly Deploy

# main 브랜치에 푸시될 때마다 워크플로우가 실행됩니다.
on:
  push:
    branches:
      - docker-flyio

jobs:
  deploy:
    name: Deploy app
    runs-on: ubuntu-latest

    # 동일한 그룹에서 하나의 작업만 실행되도록 설정합니다 (선택 사항).
    concurrency: deploy-group

    steps:
      # 저장소를 체크아웃합니다.
      - uses: actions/checkout@v4

      # JDK 17을 설치합니다.
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      # Maven을 사용하여 애플리케이션을 빌드합니다. 테스트는 생략합니다.
      - name: Build with Maven
        run: mvn clean package -DskipTests

      # Docker Hub에 로그인합니다.
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      # Docker 이미지를 빌드하고 Docker Hub에 푸시합니다.
      - name: Docker build and push
        run: |
          docker build -t docker-restapi:fly-success .
          docker tag docker-restapi:fly-success suhwan102/docker-restapi:fly-success
          docker push suhwan102/docker-restapi:fly-success

      # Fly.io CLI를 설정합니다.
      - uses: superfly/flyctl-actions/setup-flyctl@master

      # Fly.io에 애플리케이션을 배포합니다.
      - run: flyctl deploy --remote-only --image suhwan102/docker-restapi:fly-success
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
