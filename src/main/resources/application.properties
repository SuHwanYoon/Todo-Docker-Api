logging.level.org.springframework=info
#spring.h2.console.enabled=true
#H2 연결 고정(정적) static URL 설정 H2DB는 SpringBoot AutoConfiguration이 현재 @Entity 기반으로 자동으로 테이블을 생성해준다
#spring.datasource.url=jdbc:h2:mem:testdb
#데이터 소스(sql file ) 실행 지연 -> Jpa가 먼저 테이블을 만들고 sql파일이 실행됨 (테이블 못찾음 오류 방지)
#spring.jpa.defer-datasource-initialization=true
# Jpa sql문 콘솔에서 보기
spring.jpa.show-sql=true
#Spring Scurity ID,PW 설정
#JWT사용을 위해 주석처리
#spring.security.user.name = yoon
#spring.security.user.password = dummy

#SpringBoot어플케이션 시작시 콘솔에 표시되는 banner를 off
spring.main.banner-mode=off
#콘솔에 출력되는 로그 메시지의 형식을 지정
#%d{MM-dd HH:mm:ss}: 로그가 출력된 날짜와 시간을 MM-dd HH:mm:ss 형식으로 표시
#%logger{36}: 로그를 기록한 로거의 이름을 최대 36자까지 출력합니다. 로거의 이름이 길 경우, 앞부분이 생략
#%msg: 실제 로그 메시지를 출력
#%n: 줄 바꿈 문자를 추가합니다. 이는 각 로그 메시지가 별도의 줄에 출력
# 출력예시) 07-09 12:34:56 - com.example.MyClass - Application started
logging.pattern.console= %d{MM-dd HH:mm:ss} - %logger{36} - %msg%n
#기본 포트 8080사용

# 연결할 Mysql url, port, 지정한 DB이름(환경변수)
# RDS_HOSTNAME 환경변수가 설정되지 않은 경우(로컬환경인경우) 기본값 'localhost'를 사용
spring.datasource.url=jdbc:mysql://${RDS_HOSTNAME:localhost}:${RDS_PORT:3306}/${RDS_DB_NAME:todos}
# RDS_USERNAME 환경변수가 설정되지 않은 경우(로컬환경인경우) 기본값 'todos-user'를 사용
spring.datasource.username=${RDS_USERNAME:todos-user}
# RDS_PASSWORD 환경변수가 설정되지 않은 경우(로컬환경인경우) 기본값 'dummytodos'를 사용
spring.datasource.password=${RDS_PASSWORD:dummytodos}


# SpringBoot AutoConfiguration이 현재 @Entity 기반으로 자동으로 테이블을 생성해주도록 설정
spring.jpa.hibernate.ddl-auto=update
#방언 설정
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

#Mysql shell 연결 명령어
# social-media-user라는 사용자로 localhost의 3307번 포트에 접속하겠다는 의미
# \connect DB유저이름(DB이름과 착각하지 않도록 조심)@host주소:port번호
# \connect todos-user@localhost:3306

# 호스트 주소가 localhost:3306 일때의 루트계정 접속방법
#C:\Windows\System32>mysql -u root -p
# 호스트 주소가 localhost:3306 일때의 사용자지정 계정 접속방법
#C:\Windows\System32>mysql -u 사용자계정 -p
#Enter password: *************


# 호스트 주소가 [localhost:3307] 일때의 루트 계정 접속방법
#C:\Windows\System32>mysql -u root -p
# 호스트 주소가 [localhost:3307] 일때의 사용자 지정 계정 접속방법 (포트를 지정)
#C:\Windows\System32>mysql -u social-media-user -p -h localhost -P 3307
#Enter password: *************



# docker 설정 명령어

#docker run --detach 
#--env MYSQL_ROOT_PASSWORD=dummypassword 
#--env MYSQL_USER=todos-user 
#--env MYSQL_PASSWORD=dummytodos 
#  MySQL 서버가 시작될 때 생성할 데이터베이스의 이름을 지정 
#--env MYSQL_DATABASE=todos 
#이미지 파일 이름(중복불가)
#--name mysql 
# 호스트 port 3306(중복불가) 도커 container port 3306(중복가능)
#--publish 3306:3306 
# 사용할 Docker 이미지를 지정 여기서는 MySQL 버전 8의 Oracle 버전을 사용 
#mysql:8-oracle